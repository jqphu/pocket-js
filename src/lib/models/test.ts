/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Simulation =
  | {
      message?: string | null;
      type: 'revert';
    }
  | {
      /**
       * Mapping of contract to ERC1155 events.
       *
       * There could be multiple events coming from the same address. This could be empty.
       */
      erc1155: {
        [k: string]: ERC1155[];
      };
      /**
       * Mapping of contract to ERC20 events.
       *
       * There could be multiple events coming from the same address. This could be empty.
       */
      erc20: {
        [k: string]: ERC20[];
      };
      /**
       * Mapping of contract to ERC721 events.
       *
       * There could be multiple events coming from the same address. This could be empty.
       */
      erc721: {
        [k: string]: ERC721[];
      };
      /**
       * Native eth changes.
       */
      native: Native[];
      type: 'success';
    };
export type ERC1155 =
  | {
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      from: string;
      /**
       * Number in hex prefixed by 0x.
       */
      id: string;
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      operator: string;
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      to: string;
      type: 'transferSingle';
      /**
       * Number in hex prefixed by 0x.
       */
      value: string;
    }
  | {
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      from: string;
      id: string[];
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      operator: string;
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      to: string;
      type: 'transferBatch';
      value: string[];
    }
  | {
      approved: boolean;
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      from: string;
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      to: string;
      type: 'approvalForAll';
    };
export type ERC20 =
  | {
      /**
       * Number in hex prefixed by 0x.
       */
      amount: string;
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      from: string;
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      to: string;
      type: 'transfer';
    }
  | {
      /**
       * Number in hex prefixed by 0x.
       */
      amount: string;
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      from: string;
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      to: string;
      type: 'approval';
    };
export type ERC721 =
  | {
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      from: string;
      /**
       * Number in hex prefixed by 0x.
       */
      id: string;
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      to: string;
      type: 'transfer';
    }
  | {
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      from: string;
      /**
       * Number in hex prefixed by 0x.
       */
      id: string;
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      to: string;
      type: 'approval';
    }
  | {
      approved: boolean;
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      from: string;
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      to: string;
      type: 'approvalForAll';
    }
  | {
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      from: string;
      /**
       * Number in hex prefixed by 0x.
       */
      from_id: string;
      /**
       * Ethereum address in hex prefixed with 0x.
       */
      to: string;
      /**
       * Number in hex prefixed by 0x.
       */
      to_id: string;
      type: 'consecutiveTransfer';
    };

export interface Native {
  /**
   * Number in hex prefixed by 0x.
   */
  amount: string;
  /**
   * Ethereum address in hex prefixed with 0x.
   */
  from: string;
  /**
   * Ethereum address in hex prefixed with 0x.
   */
  to: string;
}
